!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__form-input_type_error",errorClass:"modal__error_visible"};document.querySelector(".modal__form");var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-Error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-Error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid||""===e.value.trim()))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._toggleButtonState()}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._toggleButtonState()})),this._setEventListeners()}},s=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._deleteButton.addEventListener("click",(()=>this._handleDeleteCard())),this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._cardImage.addEventListener("click",(()=>this._handlePreviewClick()))}_handleDeleteCard(){this._element.remove(),this._element=null}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button-active")}_handlePreviewClick(){this._handleImageClick(this._name,this._link)}getView(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle=this._element.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__button-delete"),this._setEventListeners(),this._element}},o=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}},n=class extends o{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__form-input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),super.close(),this._form.reset()}))}};const r=document.querySelector("#profile-edit-btn"),i=document.querySelector("#profile-edit-modal"),l=document.querySelector("#profile-addcard-modal"),a=(i.querySelector(".modal__close"),l.querySelector(".modal__close"),document.querySelector("#profile__title-js"),document.querySelector("#profile__description-js"),document.querySelector("#profile__Title-Input"),document.querySelector("#profile__Description-Input"),i.querySelector("#profile__edit-form")),c=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),u=document.querySelector("#profile-addcard-modal"),_=(document.querySelector("#profile__addTitle-Input"),document.querySelector("#profile__url-Input"),document.querySelector("#preview-modal")),m=(_.querySelector(".modal__image"),_.querySelector(".modal__caption"),_.querySelector(".modal__close-preview"),document.querySelector("#profile__Title-Input")),d=document.querySelector("#profile__Description-Input");function p(e,t){const o=new s(e,"#card-template",h).getView();t.addItem(o)}function h(e,t){y.open({name:e,link:t})}new t(e,u).enableValidation(),new t(e,a).enableValidation();const S=new class{constructor(e){let{items:t,renderer:s,containerSelector:o}=e;this._items=t,this._renderer=s,this._container=document.querySelector(o)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>p(e,S),containerSelector:".cards__list"});S.renderItems();const E=new n({popupSelector:"#profile-addcard-modal",handleFormSubmit:e=>{p({name:e.title,link:e.description},S),E.close()}});c.addEventListener("click",(()=>E.open())),E.setEventListeners();const f=new n({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{v.setUserInfo({name:e.title,job:e.description}),f.close()}}),v=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameSelector:"#profile__title-js",jobSelector:"#profile__description-js"});r.addEventListener("click",(()=>{const{name:e,job:t}=v.getUserInfo();m.value=e,d.value=t,f.open(),f.setEventListeners()}));const y=new class extends o{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".modal__image"),this._captionElement=this._popupElement.querySelector(".modal__caption")}open(e){let{link:t,name:s}=e;this._imageElement.src=t,this._imageElement.alt=s,this._captionElement.textContent=s,super.open()}}("#preview-modal");y.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,